package PCA_Shutoff
public
with PulseOx_Interface, PCAPump_Interface, PCA_Shutoff_Logic, 
	PCA_Shutoff_Properties, MAP_Error_Properties, PCA_Shutoff_Display,
	PCA_Shutoff_Errors, Capnograph_Interface, MAP_Errors,
	PCA_Shutoff_Error_Properties, MAP_Properties, PCA_Shutoff_Patient;
	
	system PCA_Shutoff_System
	features
		-- Between app-defined system and patient
		administer : out feature;
		pulseox_measure : in feature;
		capnograph_measure : in feature;
	end PCA_Shutoff_System;

	system implementation PCA_Shutoff_System.imp
	subcomponents
		-- Physiological inputs	
		pulseOx : device PulseOx_Interface::ICEpoInterface.imp; 
		capnograph : device Capnograph_Interface::ICEcapnographInterface.imp;
		
		-- App logic
		appLogic : process PCA_Shutoff_Logic::ICEpcaShutoffProcess.imp;
		appDisplay : process PCA_Shutoff_Display::ICEpcaDisplayProcess.imp;
		
		-- Controlled device
		pcaPump : device PCAPump_Interface::ICEpcaInterface.imp;

		-- The patient
		patient : abstract PCA_Shutoff_Patient::PCA_Shutoff_Patient;
	connections
		-- From the patient to the devices		
		IVLine : feature pcaPump.DrugFlow -> patient.vein;
		pulseOx_measurement : feature patient.fingerclip -> pulseOx.RefractedLight;  
		capnograph_measurement : feature patient.exhalation -> capnograph.Breath;
		
		-- From components to logic
		spo2_logic : port pulseOx.SpO2 -> appLogic.SpO2;
		respiratoryrate_logic : port capnograph.RespiratoryRate -> appLogic.RR;
		pumpcommand_logic : port appLogic.CmdPumpNorm -> pcaPump.PumpNormally;
		etco2_logic : port capnograph.ETCO2 -> appLogic.ETCO2;
		capnograph_fail_logic : port capnograph.DeviceError -> appLogic.capnographError;
		pulseox_fail_logic : port pulseOx.DeviceError -> appLogic.pulseOxError; 
		
		-- From components to display
		spo2_disp : port pulseOx.SpO2 -> appDisplay.SpO2;
		respiratoryrate_disp : port capnograph.RespiratoryRate -> appDisplay.RespiratoryRate;
		pumpcommand_disp : port appLogic.CmdPumpNorm -> appDisplay.CommandPumpNormal;
		etco2_disp : port capnograph.ETCO2 -> appDisplay.ETCO2;
		--capnograph_fail_disp : port capnograph.DeviceError -> appDisplay.capnographError;
		--pulseox_fail_disp : port pulseOx.DeviceError -> appDisplay.pulseOxError;
	flows
		spo2_flow : end to end flow pulseOx.spo2_flow -> 
									spo2_logic -> 
									appLogic.spo2_flow -> 
									pumpcommand_logic -> 
									pcaPump.spo2_flow;
	properties
		MAP_Properties::Component_Type => aggregation;
	annex EMV2 {** 
		use types PCA_Shutoff_Errors;
		connection error
			pulseox_dc : error source spo2_logic {InadvertentPumpNormally};
		end connection;
		properties	
			MAP_Error_Properties::Fundamentals => ([
				Level => 1;
				Description => "Death or serious injury to a human";
				Accidents => ([
					Description => "Patient dies";
					Hazards => ([
						Name => "Patient overdosed";
						Description => "The patient receives more analgesic than they can tolerate";
						HazardousFactor => "Analgesic";
						SystemElement => reference (pcaPump);
						SystemElementState => reference(notPumping);
						EnvironmentElement => reference (patient);
						EnvironmentElementStates => (reference(AtRisk), reference(Overdosed));
						Constraints => ([
							Name => "Don't overdose the patient";
							Description => "The pump shouldn't run if the patient shows signs of an overdose";
							ErrorType => reference(OverdosedPatient);
						]);
					]);
				]);
			]);
		
	**};
	end PCA_Shutoff_System.imp;

end PCA_Shutoff;
