package PCAPump_Interface
public
with PCA_Shutoff_Types, MAP_Properties, MAP_Error_Properties;
	device ICEpcaInterface
	features
		TicketInput : in event data port PCA_Shutoff_Types::PumpCmd;
		DrugFlow : out feature;
	properties
		MAP_Properties::Component_Type => actuator;
	annex EMV2 {**
 		use types PCA_Shutoff_Errors, MAP_Errors;
 		use behavior PCA_Shutoff_Errors::PumpStatus;
		error propagations
			TicketInput : in propagation {TicketTooLong, ErraticTicket, EarlyTicket, LateTicket};
			DrugFlow : out propagation {TooMuchAnalgesic};
			flows
				-- Externally caused problems
				LongTicketLeadsToOD : error path TicketInput{TicketTooLong} -> DrugFlow{TooMuchAnalgesic};
				ErraticTicketLeadsToOD : error path TicketInput{ErraticTicket} -> DrugFlow{TooMuchAnalgesic};
				EarlyTicketLeadsToOD : error path TicketInput{EarlyTicket} -> DrugFlow{TooMuchAnalgesic};
				LateTicketLeadsToOD : error path TicketInput{LateTicket} -> DrugFlow{TooMuchAnalgesic};
				
				-- External errors that don't cause problems
				LowTicketValueIsntUnsafe : error sink TicketInput{TicketTooShort};
				NoTicketsArentUnsafe : error sink TicketInput{NoTicket};
				
				-- Internal faults
				DeteriorationLeadsToOD : error source DrugFlow{TooMuchAnalgesic} when {Deterioration};
				CosmicRayLeadsToOD : error source DrugFlow{TooMuchAnalgesic} when {CosmicRay};
				OperatorHWMistakeLeadsToOD : error source DrugFlow{TooMuchAnalgesic} when {OperatorHWMistake};
				OperatorHWWrongChoiceLeadsToOD : error source DrugFlow{TooMuchAnalgesic} when {OperatorHWWrongChoice};
				OperatorSWMistakeLeadsToOD : error source DrugFlow{TooMuchAnalgesic} when {OperatorSWMistake};
				OperatorSWWrongChoiceLeadsToOD : error source DrugFlow{TooMuchAnalgesic} when {OperatorSWWrongChoice};
		end propagations;
		component error behavior
			events
				-- Detectable external problems
				TimeoutViolation : error event {EarlyTicket};
				TimestampViolation : error event {LateTicket};
				
				-- Detectable internal problems
				PumpDeteriorates : error event {Deterioration};
			transitions
				SwitchToKVO : Normal -[  
					TimeoutViolation or
					TimestampViolation
				]-> PermanentKVO;
		end component;
		properties
			MAP_Error_Properties::ProcessModel => ([
				Name => "Ticket Duration";
				Values => reference(PumpProcessModel);
			]);
			
			MAP_Error_Properties::RuntimeErrorDetection => [
				ErrorDetectionApproach => Concurrent;
				Explanation => "Minimum separation between messages are added to detect early arrivals";
			] applies to TimeoutViolation;
			MAP_Error_Properties::RuntimeErrorDetection => [
				ErrorDetectionApproach => Concurrent;
				Explanation => "Tickets should be timestamped so latency violations can be detected";
			] applies to TimestampViolation;
			MAP_Error_Properties::RuntimeErrorDetection => [
				ErrorDetectionApproach => Preemptive;
				Explanation => "The pump should be periodically inspected for signs of wear";
			] applies to PumpDeteriorates;
			
			MAP_Error_Properties::RuntimeErrorHandling => [
				ErrorHandlingApproach => Rollforward;
				Explanation => "The pump switches into a fail-safe mode, ie, it runs at a minimal (KVO) rate";
			] applies to SwitchToKVO;
			
			MAP_Error_Properties::ExternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				ProcessVariableValue => reference(NonzeroTicketValue);
				Explanation => "The ticket has a time value that is too long";
			] applies to LongTicketLeadsToOD;
			MAP_Error_Properties::ExternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				ProcessVariableValue => reference(NonzeroTicketValue);
				Explanation => "The PCA Pump gets a ticket 'out of the blue'";
			] applies to ErraticTicketLeadsToOD;
			MAP_Error_Properties::ExternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				ProcessVariableValue => reference(NonzeroTicketValue);
				Explanation => "The PCA Pump gets a ticket 'too soon' -- before it has finished handling the previous ticket";
			] applies to EarlyTicketLeadsToOD;
			MAP_Error_Properties::ExternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				ProcessVariableValue => reference(NonzeroTicketValue);
				Explanation => "The PCA pump gets a ticket late, so it's valid past the time window it should be";
			] applies to LateTicketLeadsToOD;
			
			MAP_Error_Properties::InternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				Explanation => "The pump deteriorates to the point that it fails open";
			] applies to DeteriorationLeadsToOD;
			MAP_Error_Properties::InternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				DesignTimeHandling => (
					PCA_Shutoff_Error_Properties::ECCMemory,
					PCA_Shutoff_Error_Properties::Shielding
				);
				Explanation => "A cosmic ray flips a bit in the pump, making it run";
			] applies to CosmicRayLeadsToOD;
			MAP_Error_Properties::InternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				DesignTimeHandling => (
					PCA_Shutoff_Error_Properties::ThoughtfulUIDesign
				);
				Explanation => "The operator accidentally presses a button she didn't mean to, giving either too much drug, too strong of a drug, or drug too quickly";
			] applies to OperatorHWMistakeLeadsToOD;
			MAP_Error_Properties::InternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				DesignTimeHandling => (
					PCA_Shutoff_Error_Properties::ThoughtfulUIDesign,
					PCA_Shutoff_Error_Properties::PeriodicRetraining
				);
				Explanation => "The operator misunderstands the patient state and / or clinical process, giving either too much drug, too strong of a drug, or drug too quickly";
			] applies to OperatorHWWrongChoiceLeadsToOD;
			MAP_Error_Properties::InternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				DesignTimeHandling => (
					PCA_Shutoff_Error_Properties::ThoughtfulUIDesign
				);
				Explanation => "The operator accidentally presses a button she didn't mean to, giving either too much drug, too strong of a drug, or drug too quickly";
			] applies to OperatorSWMistakeLeadsToOD;
			MAP_Error_Properties::InternallyCausedDanger => [
				ControlledProcessState => reference(AtRisk);
				DesignTimeHandling => (
					PCA_Shutoff_Error_Properties::ThoughtfulUIDesign,
					PCA_Shutoff_Error_Properties::PeriodicRetraining
				);
				Explanation => "The operator misunderstands the patient state and / or clinical process, giving either too much drug, too strong of a drug, or drug too quickly";
			] applies to OperatorSWWrongChoiceLeadsToOD;
			
			MAP_Error_Properties::EliminatedFaults =>[
				FaultTypes => (
					reference(SoftwareBug), 
					reference(BadSoftwareDesign), 
					reference(CompromisedSoftware),
					reference(CompromisedHardware),
					reference(HardwareBug),
					reference(BadHardwareDesign),
					reference(ProductionDefect)
				);
				Explanation => "We're using a 'proven in use' PCA Pump";
			];
			
			MAP_Error_Properties::EliminatedFaults => [
				FaultTypes => (
					reference(AdversaryAccessesHardware),
					reference(AdversaryAccessesSoftware)
				);
				Explanation => "The hospital has physical security measures in place";
			];
			
			MAP_Error_Properties::EliminatedFaults => [
				FaultTypes => (
					reference(SyntaxMismatch),
					reference(RateMismatch),
					reference(SemanticMismatch)
				);
				Explanation => "The PCA pump isn't a connection between two components";
			];
	**};
	end ICEpcaInterface;

	device implementation ICEpcaInterface.imp
	end ICEpcaInterface.imp;

end PCAPump_Interface;